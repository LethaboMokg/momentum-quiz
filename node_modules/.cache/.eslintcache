[{"/home/atlegang/our_work/momentum-quiz/src/index.js":"1","/home/atlegang/our_work/momentum-quiz/src/App.js":"2","/home/atlegang/our_work/momentum-quiz/src/reportWebVitals.js":"3","/home/atlegang/our_work/momentum-quiz/src/Pages/Home.js":"4","/home/atlegang/our_work/momentum-quiz/src/Pages/loginform.js":"5","/home/atlegang/our_work/momentum-quiz/src/Pages/Quiz.js":"6","/home/atlegang/our_work/momentum-quiz/src/Pages/SocialShare.js":"7","/home/atlegang/our_work/momentum-quiz/src/Pages/firebase.js":"8"},{"size":535,"mtime":1669208537274,"results":"9","hashOfConfig":"10"},{"size":567,"mtime":1669208537270,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1669208537274,"results":"12","hashOfConfig":"10"},{"size":1717,"mtime":1669217951410,"results":"13","hashOfConfig":"10"},{"size":7398,"mtime":1669217951538,"results":"14","hashOfConfig":"10"},{"size":9293,"mtime":1669208537270,"results":"15","hashOfConfig":"10"},{"size":1356,"mtime":1669208537270,"results":"16","hashOfConfig":"10"},{"size":862,"mtime":1669208537270,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un7yp",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/atlegang/our_work/momentum-quiz/src/index.js",[],[],"/home/atlegang/our_work/momentum-quiz/src/App.js",[],[],"/home/atlegang/our_work/momentum-quiz/src/reportWebVitals.js",[],[],"/home/atlegang/our_work/momentum-quiz/src/Pages/Home.js",["43"],[],"/home/atlegang/our_work/momentum-quiz/src/Pages/loginform.js",["44","45","46"],[],"import React from 'react'\nimport { getAuth } from \"firebase/auth\";\nimport { RecaptchaVerifier } from \"firebase/auth\";\nimport { signInWithPhoneNumber } from \"firebase/auth\";\nimport { Navigate} from \"react-router-dom\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport firebase from './firebase'\nimport './loginform.css'\n\nlet userData = {}\n\nfunction saveUserData() {\n\tconst uid = getAuth().currentUser.uid;\n\tconst db = getDatabase()\n\n\n\tset(\n\t\tref(db, `Users/${uid}/`),\n\t\tuserData\n\t);\n\n}\n\nfunction GoToNext() {\n\n    \n    const [goToHome, setGoToHome] = React.useState(false);\n    let formInfo = {}\n\n\n\n    if(goToHome) {\n        return <Navigate to=\"/Home\" />;\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.target\n\n        formInfo[name] = value;\n\n        // this.setState(\n        //     {\n        //         [name]: value\n        //     }\n        // )\n    }\n    function configureCaptcha() {\n        window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n            'size': 'invisible',\n            'callback': (response) => {\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\n                //this.onSignInSubmit();\n                console.log('Recaptcha varified')\n            },\n            defaultCountry: \"IN\"\n        }, getAuth());\n    }\n    function onSignInSubmit (e) {\n\n        e.preventDefault()\n\n        configureCaptcha()\n        // const phoneNumber = \"+27\" + this.state.mobile\n        const phoneNumber = \"+27\" + formInfo['mobile']\n\n        userData[\"mobile\"] = phoneNumber;\n        userData[\"name\"] = formInfo['name'];\n\n    \n\n        console.log(phoneNumber)\n        const appVerifier = window.recaptchaVerifier;\n        const auth = getAuth();\n        signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n            .then((confirmationResult) => {\n                // SMS sent. Prompt user to type the code from the message, then sign the\n                // user in with confirmationResult.confirm(code).\n                window.confirmationResult = confirmationResult;\n                console.log('OTP has been sent.')\n                // ...\n            }).catch((error) => {\n                // Error; SMS not sent\n                // ...\n                console.log('SMS not sent')\n                console.log(error)\n            });\n    }\n    function onSubmitOTP (e){\n        (e).preventDefault()\n\n        console.log(formInfo['otp'])\n\n        setGoToHome(true);\n\n        // const code = this.state.otp\n        const code = formInfo['otp']\n        console.log(code)\n        window.confirmationResult.confirm(code)\n        .then((result) => {\n            // User signed in successfully.\n            const user = result.user;\n            if (user) {\n                saveUserData(user.uid);\n                console.log(JSON.stringify(user))\n                // alert('User is verified')\n                setGoToHome(true);\n            } else {\n                //\"error\"\n                console.log(\"Sorry! User doesn't exist\")\n            }\n            \n            // ...\n        }).catch((error) => {\n            // User couldn't sign in (bad verification code?)\n            // ...\n        });\n    }\n     \n    return (\n            <div className='app_'>\n                <div className =\"topright\"><img src={require('./images/RSImage.png')}></img></div>\n                <div className='login'>\n                    <h2 className='title'>Login</h2>\n                    <form onSubmit={onSignInSubmit}>\n                        <div id='sign-in-button'></div>\n\n                        <input className='answer_' name='name' placeholder='Enter your name' required onChange={handleChange} /><br/>\n                        <input className='answer_' name='mobile' placeholder='Mobile number' required onChange={handleChange} />\n                        <button className=\"answered here-btn\" type='submit'>Submit</button>\n                    </form>\n\n\n                    <h2 className='title'>Enter OTP</h2>\n                    <form onSubmit={onSubmitOTP}>\n\n                        <input className='answer_' type='text' name='otp' placeholder='OTP Number' required onChange={handleChange} />\n                        <button className=\"answered here-btn\" type='submit' >Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    \n\n}\n\n// class App extends React.Component {\n//     auth = getAuth();\n\n//     handleChange = (e) => {\n//         const { name, value } = e.target\n//         this.setState(\n//             {\n//                 [name]: value\n//             }\n//         )\n//     }\n//     configureCaptcha = () => {\n//         window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n//             'size': 'invisible',\n//             'callback': (response) => {\n//                 // reCAPTCHA solved, allow signInWithPhoneNumber.\n//                 //this.onSignInSubmit();\n//                 console.log('Recaptcha varified')\n//             },\n//             defaultCountry: \"IN\"\n//         }, getAuth());\n//     }\n//     onSignInSubmit = (e) => {\n\n//         e.preventDefault()\n\n//         this.configureCaptcha()\n//         const phoneNumber = \"+27\" + this.state.mobile\n//         console.log(phoneNumber)\n//         const appVerifier = window.recaptchaVerifier;\n//         const auth = getAuth();\n//         signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n//             .then((confirmationResult) => {\n//                 // SMS sent. Prompt user to type the code from the message, then sign the\n//                 // user in with confirmationResult.confirm(code).\n//                 window.confirmationResult = confirmationResult;\n//                 console.log('OTP has been sent.')\n//                 // ...\n//             }).catch((error) => {\n//                 // Error; SMS not sent\n//                 // ...\n//                 console.log('SMS not sent')\n//                 console.log(error)\n//             });\n//     }\n//     onSubmitOTP = (e) => {\n//         (e).preventDefault()\n        \n//         GoToNext()\n\n//         return <Navigate to=\"/Home\"/>;\n\n//         const code = this.state.otp\n//         console.log(code)\n//         window.confirmationResult.confirm(code).then((result) => {\n//             // User signed in successfully.\n//             const user = result.user;\n//             console.log(JSON.stringify(user))\n//             alert('User is verified')\n//             // ...\n//         }).catch((error) => {\n//             // User couldn't sign in (bad verification code?)\n//             // ...\n//         });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h2>LOGIN</h2>\n//                 <form onSubmit={this.onSignInSubmit}>\n//                     <div id='sign-in-button'></div>\n\n//                     <input type='number' name='mobile' placeholder='Mobile number' required onChange={this.handleChange} />\n//                     <button type='submit'>Submit</button>\n//                 </form>\n\n\n//                 <h2>Enter OTP</h2>\n//                 <form onSubmit={this.onSubmitOTP}>\n\n//                     <input type='number' name='otp' placeholder='OTP Number' required onChange={this.handleChange} />\n//                     <button type='submit' >Submit</button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n\nexport default GoToNext","/home/atlegang/our_work/momentum-quiz/src/Pages/Quiz.js",["47","48","49","50","51","52","53"],[],"/home/atlegang/our_work/momentum-quiz/src/Pages/SocialShare.js",["54","55"],[],"/home/atlegang/our_work/momentum-quiz/src/Pages/firebase.js",["56"],[],{"ruleId":"57","severity":1,"message":"58","line":15,"column":9,"nodeType":"59","endLine":15,"endColumn":81},{"ruleId":"60","severity":1,"message":"61","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":120,"column":40,"nodeType":"59","endLine":120,"endColumn":64},{"ruleId":"57","severity":1,"message":"58","line":141,"column":43,"nodeType":"59","endLine":141,"endColumn":78},{"ruleId":"60","severity":1,"message":"64","line":5,"column":45,"nodeType":"62","messageId":"63","endLine":5,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":16},{"ruleId":"60","severity":1,"message":"65","line":14,"column":10,"nodeType":"62","messageId":"63","endLine":14,"endColumn":22},{"ruleId":"60","severity":1,"message":"66","line":49,"column":6,"nodeType":"62","messageId":"63","endLine":49,"endColumn":17},{"ruleId":"60","severity":1,"message":"67","line":60,"column":9,"nodeType":"62","messageId":"63","endLine":60,"endColumn":14},{"ruleId":"60","severity":1,"message":"68","line":66,"column":9,"nodeType":"62","messageId":"63","endLine":66,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":90,"column":5,"nodeType":"71","endLine":90,"endColumn":7,"suggestions":"72"},{"ruleId":"60","severity":1,"message":"73","line":4,"column":3,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"60","severity":1,"message":"74","line":14,"column":17,"nodeType":"62","messageId":"63","endLine":14,"endColumn":25},{"ruleId":"60","severity":1,"message":"75","line":21,"column":7,"nodeType":"62","messageId":"63","endLine":21,"endColumn":16},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'DataSnapshot' is defined but never used.","'handleChange' is defined but never used.","'currentQuiz' is assigned a value but never used.","'error' is assigned a value but never used.","'passed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dbRef'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'InstagramIcon' is defined but never used.","'useState' is defined but never used.","'analytics' is assigned a value but never used.",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dbRef]",{"range":"79","text":"80"},[1776,1778],"[dbRef]"]