{"ast":null,"code":"var _jsxFileName = \"/home/lethabo/Videos/Momentum project/new 111111/Quiz-Demo/src/Pages/loginform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getAuth } from \"firebase/auth\";\nimport { RecaptchaVerifier } from \"firebase/auth\";\nimport { signInWithPhoneNumber } from \"firebase/auth\";\nimport { Navigate } from \"react-router-dom\";\nimport firebase from './firebase';\nimport { getDatabase, ref, set, get, child, DataSnapshot } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet userData = {};\nfunction saveUserData(userName) {\n  const uid = getAuth().currentUser.uid;\n  const db = getDatabase();\n  set(ref(db, `Users/${uid}/`), {\n    \"name\": userName\n  });\n}\nfunction GoToNext() {\n  _s();\n  const [goToHome, setGoToHome] = React.useState(false);\n  let formInfo = {};\n  if (goToHome) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    formInfo[name] = value;\n\n    // this.setState(\n    //     {\n    //         [name]: value\n    //     }\n    // )\n  }\n\n  function configureCaptcha() {\n    window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n      'size': 'invisible',\n      'callback': response => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        //this.onSignInSubmit();\n        console.log('Recaptcha varified');\n      },\n      defaultCountry: \"IN\"\n    }, getAuth());\n  }\n  function onSignInSubmit(e) {\n    e.preventDefault();\n    configureCaptcha();\n    // const phoneNumber = \"+27\" + this.state.mobile\n    const phoneNumber = \"+27\" + formInfo['mobile'];\n    userData[\"mobile\"] = phoneNumber;\n    userData[\"mobile\"] = phoneNumber;\n    console.log(phoneNumber);\n    const appVerifier = window.recaptchaVerifier;\n    const auth = getAuth();\n    signInWithPhoneNumber(auth, phoneNumber, appVerifier).then(confirmationResult => {\n      // SMS sent. Prompt user to type the code from the message, then sign the\n      // user in with confirmationResult.confirm(code).\n      window.confirmationResult = confirmationResult;\n      console.log('OTP has been sent.');\n      // ...\n    }).catch(error => {\n      // Error; SMS not sent\n      // ...\n      console.log('SMS not sent');\n      console.log(error);\n    });\n  }\n  function onSubmitOTP(e) {\n    e.preventDefault();\n    console.log(formInfo['otp']);\n    setGoToHome(true);\n\n    // const code = this.state.otp\n    const code = formInfo['otp'];\n    console.log(code);\n    window.confirmationResult.confirm(code).then(result => {\n      // User signed in successfully.\n      const user = result.user;\n      console.log(JSON.stringify(user));\n      // alert('User is verified')\n      setGoToHome(true);\n      // ...\n    }).catch(error => {\n      // User couldn't sign in (bad verification code?)\n      // ...\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSignInSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sign-in-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Enter your name\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"mobile\",\n        placeholder: \"Mobile number\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"otp\",\n        placeholder: \"OTP Number\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 13\n  }, this);\n}\n\n// class App extends React.Component {\n//     auth = getAuth();\n\n//     handleChange = (e) => {\n//         const { name, value } = e.target\n//         this.setState(\n//             {\n//                 [name]: value\n//             }\n//         )\n//     }\n//     configureCaptcha = () => {\n//         window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n//             'size': 'invisible',\n//             'callback': (response) => {\n//                 // reCAPTCHA solved, allow signInWithPhoneNumber.\n//                 //this.onSignInSubmit();\n//                 console.log('Recaptcha varified')\n//             },\n//             defaultCountry: \"IN\"\n//         }, getAuth());\n//     }\n//     onSignInSubmit = (e) => {\n\n//         e.preventDefault()\n\n//         this.configureCaptcha()\n//         const phoneNumber = \"+27\" + this.state.mobile\n//         console.log(phoneNumber)\n//         const appVerifier = window.recaptchaVerifier;\n//         const auth = getAuth();\n//         signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n//             .then((confirmationResult) => {\n//                 // SMS sent. Prompt user to type the code from the message, then sign the\n//                 // user in with confirmationResult.confirm(code).\n//                 window.confirmationResult = confirmationResult;\n//                 console.log('OTP has been sent.')\n//                 // ...\n//             }).catch((error) => {\n//                 // Error; SMS not sent\n//                 // ...\n//                 console.log('SMS not sent')\n//                 console.log(error)\n//             });\n//     }\n//     onSubmitOTP = (e) => {\n//         (e).preventDefault()\n\n//         GoToNext()\n\n//         return <Navigate to=\"/Home\"/>;\n\n//         const code = this.state.otp\n//         console.log(code)\n//         window.confirmationResult.confirm(code).then((result) => {\n//             // User signed in successfully.\n//             const user = result.user;\n//             console.log(JSON.stringify(user))\n//             alert('User is verified')\n//             // ...\n//         }).catch((error) => {\n//             // User couldn't sign in (bad verification code?)\n//             // ...\n//         });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h2>LOGIN</h2>\n//                 <form onSubmit={this.onSignInSubmit}>\n//                     <div id='sign-in-button'></div>\n\n//                     <input type='number' name='mobile' placeholder='Mobile number' required onChange={this.handleChange} />\n//                     <button type='submit'>Submit</button>\n//                 </form>\n\n//                 <h2>Enter OTP</h2>\n//                 <form onSubmit={this.onSubmitOTP}>\n\n//                     <input type='number' name='otp' placeholder='OTP Number' required onChange={this.handleChange} />\n//                     <button type='submit' >Submit</button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n_s(GoToNext, \"ZoO/tQ/b5HlGLWd+PdcecvrlBJY=\");\n_c = GoToNext;\nexport default GoToNext;\nvar _c;\n$RefreshReg$(_c, \"GoToNext\");","map":{"version":3,"names":["React","useState","getAuth","RecaptchaVerifier","signInWithPhoneNumber","Navigate","firebase","getDatabase","ref","set","get","child","DataSnapshot","userData","saveUserData","userName","uid","currentUser","db","GoToNext","goToHome","setGoToHome","formInfo","handleChange","e","name","value","target","configureCaptcha","window","recaptchaVerifier","response","console","log","defaultCountry","onSignInSubmit","preventDefault","phoneNumber","appVerifier","auth","then","confirmationResult","catch","error","onSubmitOTP","code","confirm","result","user","JSON","stringify"],"sources":["/home/lethabo/Videos/Momentum project/new 111111/Quiz-Demo/src/Pages/loginform.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { getAuth } from \"firebase/auth\";\nimport { RecaptchaVerifier } from \"firebase/auth\";\nimport { signInWithPhoneNumber } from \"firebase/auth\";\nimport { Navigate} from \"react-router-dom\";\nimport firebase from './firebase'\nimport { getDatabase, ref, set, get, child, DataSnapshot } from \"firebase/database\";\n\nlet userData = {}\n\nfunction saveUserData(userName) {\n\tconst uid = getAuth().currentUser.uid;\n\tconst db = getDatabase()\n\n\n\tset(\n\t\tref(db, `Users/${uid}/`),\n\t\t{\n\t\t\t\"name\": userName\n\t\t}\n\t);\n\n}\n\nfunction GoToNext() {\n\n    const [goToHome, setGoToHome] = React.useState(false);\n    let formInfo = {}\n\n\n\n    if(goToHome) {\n        return <Navigate to=\"/Home\" />;\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.target\n\n        formInfo[name] = value;\n\n        // this.setState(\n        //     {\n        //         [name]: value\n        //     }\n        // )\n    }\n    function configureCaptcha() {\n        window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n            'size': 'invisible',\n            'callback': (response) => {\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\n                //this.onSignInSubmit();\n                console.log('Recaptcha varified')\n            },\n            defaultCountry: \"IN\"\n        }, getAuth());\n    }\n    function onSignInSubmit (e) {\n\n        e.preventDefault()\n\n        configureCaptcha()\n        // const phoneNumber = \"+27\" + this.state.mobile\n        const phoneNumber = \"+27\" + formInfo['mobile']\n\n        userData[\"mobile\"] = phoneNumber;\n        userData[\"mobile\"] = phoneNumber;\n\n    \n\n        console.log(phoneNumber)\n        const appVerifier = window.recaptchaVerifier;\n        const auth = getAuth();\n        signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n            .then((confirmationResult) => {\n                // SMS sent. Prompt user to type the code from the message, then sign the\n                // user in with confirmationResult.confirm(code).\n                window.confirmationResult = confirmationResult;\n                console.log('OTP has been sent.')\n                // ...\n            }).catch((error) => {\n                // Error; SMS not sent\n                // ...\n                console.log('SMS not sent')\n                console.log(error)\n            });\n    }\n    function onSubmitOTP (e){\n        (e).preventDefault()\n\n        console.log(formInfo['otp'])\n\n        setGoToHome(true);\n\n        // const code = this.state.otp\n        const code = formInfo['otp']\n        console.log(code)\n        window.confirmationResult.confirm(code)\n        .then((result) => {\n            // User signed in successfully.\n            const user = result.user;\n            console.log(JSON.stringify(user))\n            // alert('User is verified')\n            setGoToHome(true);\n            // ...\n        }).catch((error) => {\n            // User couldn't sign in (bad verification code?)\n            // ...\n        });\n    }\n     \n    return (\n            <div>\n                <h2>LOGIN</h2>\n                <form onSubmit={onSignInSubmit}>\n                    <div id='sign-in-button'></div>\n                    \n                    <input name='name' placeholder='Enter your name' required onChange={handleChange} /><br/>\n                    <input name='mobile' placeholder='Mobile number' required onChange={handleChange} />\n                    <button type='submit'>Submit</button>\n                </form>\n\n\n                <h2>Enter OTP</h2>\n                <form onSubmit={onSubmitOTP}>\n\n                    <input type='number' name='otp' placeholder='OTP Number' required onChange={handleChange} />\n                    <button type='submit' >Submit</button>\n                </form>\n            </div>\n        );\n    \n\n}\n\n// class App extends React.Component {\n//     auth = getAuth();\n\n//     handleChange = (e) => {\n//         const { name, value } = e.target\n//         this.setState(\n//             {\n//                 [name]: value\n//             }\n//         )\n//     }\n//     configureCaptcha = () => {\n//         window.recaptchaVerifier = new RecaptchaVerifier('sign-in-button', {\n//             'size': 'invisible',\n//             'callback': (response) => {\n//                 // reCAPTCHA solved, allow signInWithPhoneNumber.\n//                 //this.onSignInSubmit();\n//                 console.log('Recaptcha varified')\n//             },\n//             defaultCountry: \"IN\"\n//         }, getAuth());\n//     }\n//     onSignInSubmit = (e) => {\n\n//         e.preventDefault()\n\n//         this.configureCaptcha()\n//         const phoneNumber = \"+27\" + this.state.mobile\n//         console.log(phoneNumber)\n//         const appVerifier = window.recaptchaVerifier;\n//         const auth = getAuth();\n//         signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n//             .then((confirmationResult) => {\n//                 // SMS sent. Prompt user to type the code from the message, then sign the\n//                 // user in with confirmationResult.confirm(code).\n//                 window.confirmationResult = confirmationResult;\n//                 console.log('OTP has been sent.')\n//                 // ...\n//             }).catch((error) => {\n//                 // Error; SMS not sent\n//                 // ...\n//                 console.log('SMS not sent')\n//                 console.log(error)\n//             });\n//     }\n//     onSubmitOTP = (e) => {\n//         (e).preventDefault()\n        \n//         GoToNext()\n\n//         return <Navigate to=\"/Home\"/>;\n\n//         const code = this.state.otp\n//         console.log(code)\n//         window.confirmationResult.confirm(code).then((result) => {\n//             // User signed in successfully.\n//             const user = result.user;\n//             console.log(JSON.stringify(user))\n//             alert('User is verified')\n//             // ...\n//         }).catch((error) => {\n//             // User couldn't sign in (bad verification code?)\n//             // ...\n//         });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h2>LOGIN</h2>\n//                 <form onSubmit={this.onSignInSubmit}>\n//                     <div id='sign-in-button'></div>\n\n//                     <input type='number' name='mobile' placeholder='Mobile number' required onChange={this.handleChange} />\n//                     <button type='submit'>Submit</button>\n//                 </form>\n\n\n//                 <h2>Enter OTP</h2>\n//                 <form onSubmit={this.onSubmitOTP}>\n\n//                     <input type='number' name='otp' placeholder='OTP Number' required onChange={this.handleChange} />\n//                     <button type='submit' >Submit</button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n\nexport default GoToNext"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}